Как сравниваются элементы коллекций?
Для сравнения элементов коллекций используется метод equals() и hashcode();Эти методы унаследованы от класса Object

Почему Мар не относиться к Collection?
Все Collection реализуют интерфейсы Iterable и Collection, Map нет

Что такое итератор и как он работает в коллекциях?
Итератор – это специальный внутренний объект в коллекции, который с одной стороны имеет доступ ко всем ее private данным и знает ее внутреннюю структуру, с другой – реализует общедоступный интерфейс Iterator, благодаря чему все знают, как с ним работать
Итератор позволяет поочередно получить все элементы коллекции. Логичнее представить итератор чем-то вроде InputStream – у него есть все данные, но его задача выдавать их последовательно

Как можно перебрать все значения HashMap?
For-each Проход по каждой паре ключ-значение — самая базовая, основная процедура прохода по Map. В Java, каждая пара хранится в поле Map называемом Map.Entry. Map.entrySet()
Так же мы можем использовать Iterator — интерфейс, для организации цикла для перебора коллекций

???
Что будет если объект который выступал в качестве ключа в структуре MAP поменяется? 
Нельзя переименовать/изменить HashMap ключ как его добавил. Единственный способ это удалить ключ и вставить новый ключ+значение
Причина имплементация HashMap ключ модификатор final

??? дубль?
Как перебрать все значения HashMap?

Разница между Iterable и Iterator.
Iterable (какое) - итерируемое. То по чему можно итерироваться. Имплементируется классом, по которому нужно будет итерироваться.
Iterator (кто/что) - инструмент итерирования по коллекции. Итератор это отдельный класс, как правило вложенный в итерируемый класс, который задает логику итерации по итерируемому. И, естественно, имплементирует интерфейс Iterator.

Что будет если вызвать Iterator.next()
возвращает текущий элемент и переходит к следующему, если такого нет, то генерируется исключение NoSuchElementException

Что будет если добавить еще один элемент в коллекцию во время работы итератора
1. выйдет ошибка ConcurrentModificationException
2. Если использовать ListIterator то удаление/добавление пройдет нормально
